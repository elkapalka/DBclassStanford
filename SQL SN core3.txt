Students at your hometown high school have decided to organize their social network using databases. So far, they have collected information about sixteen students in four grades, 9-12. Here's the schema: 

Highschooler ( ID, name, grade ) 
English: There is a high school student with unique ID and a given first name in a certain grade. 

Friend ( ID1, ID2 ) 
English: The student with ID1 is friends with the student with ID2. Friendship is mutual, so if (123, 456) is in the Friend table, so is (456, 123). 

Likes ( ID1, ID2 ) 
English: The student with ID1 likes the student with ID2. Liking someone is not necessarily mutual, so if (123, 456) is in the Likes table, there is no guarantee that (456, 123) is also present. 

Your queries will run over a small data set conforming to the schema. View the database. (You can also download the schema and data.)

Question 3

For every pair of students who both like each other, return the name and grade of both students. Include each pair only once, with the two names in alphabetical order.  

select hname1 ,hgrade1,  hname2 , hgrade2 from
(select H1.name as hname1, H1.grade as hgrade1,  H2.name as hname2, H2.grade as hgrade2 from Highschooler H1, Highschooler H2, Likes L1
where  H1.id= L1.id1 and H2.id= L1.id2 and L1.ID1 in 
(select ID2 from Likes where  H1.id= Likes.id2 and H2.id= Likes.id1))
where hname1<hname2